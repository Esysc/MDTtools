<job id="ZTICopyFolder">
<script language="VBScript" src="ZTIUtility.vbs"/>
<script language="VBScript">

Option Explicit 
Dim iRetVal
Dim objShell
Set  objShell = WScript.CreateObject("WScript.Shell")
On Error Resume Next
iRetVal = ZTIProcess
ProcessResults iRetVal
Dim GetAnExtension
On Error Goto 0

Const OverWriteFiles = True
Set oFSO = CreateObject("Scripting.FileSystemObject")

	Function GetTheBase(filespec)
GetAnExtension = oFSO.GetExtensionName(filespec)
	GetTheBase = oFSO.GetBaseName(filespec) & "." & GetAnExtension
	End Function

Function ZTIProcess()

	' Declare the variables
	Dim sSourceFolder, ReleaseArr, Current
	Dim sTargetFolder
	Dim objNetwork
	Set objNetwork = Wscript.CreateObject("WScript.Network")
	Dim serverShare
	Dim objStdOut
	Dim objWshScriptExec
	Dim strLine
	Dim currentPath
	Dim copyCommand
	'I fake the current path relative to the DS for batch file
	currentPath = oEnvironment.Item("DeployRoot") & "\Scripts"
	serverShare =  oEnvironment.Item("OSDPackagerRoot")
	' Find all releases associated separated by a ','
	ReleaseArr = split(oEnvironment.Item("OSDCustomerRelease"),",")
	' Debug for monitoring
	strLine = " *** Downloading Release(s) *** Be patience..... "
	objShell.Run   currentPath & "\sendNotif.cmd  """ & strLine & """"
	objNetwork.MapNetworkDrive "T:", serverShare, false, oEnvironment.Item("OSDUserPackager"), oEnvironment.Item("OSDPasswordPackager")
	On Error Resume Next
	'If already mounted I dont care

	For Each Current In ReleaseArr
	
	'objNetwork.MapNetworkDrive "T:", oEnvironment.Item("OSDPackagerRoot"), false, oEnvironment.Item("OSDUserPackager"), oEnvironment.Item("OSDPasswordPackager")
	' sSourceFolder = "T:" & oEnvironment.Item("OSDCustomerRelease")
	' sTargetFolder = "C:\Mycompany\delivery\" & GetTheBase(oEnvironment.Item("OSDCustomerRelease"))

	sSourceFolder = "T:\" & Current & ""
	sTargetFolder =  "C:\Mycompany\delivery\" & GetTheBase(Current)

	If Not oFSO.FolderExists(sTargetFolder) Then
	oFSO.CreateFolder sTargetFolder
	End If
	If (Current) <> "" then
	strLine = "Copying "  & sTargetFolder

	' Optional progess logging to the task sequence progress bar
	objShell.Run   currentPath & "\sendNotif.cmd  """ & strLine & """"
	 On Error Resume Next
	' Do the actual copying
	' Send messages to REST API using sendNotif batcha
	'copyCommand =  "powershell -NoProfile -ExecutionPolicy bypass  -Command ""Copy-Item "  & sSourceFolder & "  " & sTargetFolder & " -Recurse """
	copyCommand = "cmd /c robocopy "  & sSourceFolder & " " & sTargetFolder & " /MIR"
	'copyCommand = "hobocopy /full /y /r "  & sSourceFolder & " " & sTargetFolder
	'Set objWshScriptExec = objShell.Exec( "xcopy " & sSourceFolder &  " " & sTargetFolder  & "  /y /i /e /f /z /c")
	'Set objWshScriptExec = objShell.Exec ( copyCommand)
	objShell.Exec(copyCommand)
	'objShell.Run  "xcopy " & sSourceFolder &  " " & sTargetFolder  & "  /y /i /e /f /z /c"

	'objWshScriptExec.StdIn.Close();
	Set objStdOut = objWshScriptExec.StdOut
	While Not objStdOut.AtEndOfStream
		
		strLine = "Copying " & objStdOut.ReadLine() & "....." 
		objShell.Run   currentPath & "\sendNotif.cmd  """ & strLine & """"
	'Wend
	'objShell.Run copyCommand	
	'objShell.Run "xcopy " & sSourceFolder &  " " & sTargetFolder  & " /s /y /i /e"
	'oFSO.CopyFolder sSourceFolder, sTargetFolder, True
	'objNetwork.RemoveNetworkDrive "T:"
	End If
	Next
	Set objShell = Nothing
'	objNetwork.RemoveNetworkDrive "T:"
	strLine = "Download release terminated."
	objShell.Run   currentPath & "\sendNotif.cmd  """ & strLine & """"
	End Function

	</script>
	</job>
